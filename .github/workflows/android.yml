name: Release

# 触发条件: 这里是push以”v“开头的tag触发
on:
  push:
    # 根据branch或者tags来触发
    branches:
      - main

    tags:
      - "v*"
    # 忽略的标签类型，不触发构建流程(和tags不能同时写)
    # tags-ignore:
    #   - "d*"
# 一次持续集成的运行，可以完成多个任务(下面就build)
jobs:
  builds:
    # 构建的系统(ubuntu、windows、macos)
    runs-on: ubuntu-latest

    # 可以依赖其他job
    # needs: xxxJob、[job1, job2]

    # 构建权限，ncipollo/release-action需要使用
    permissions:
      contents: write

    # 操作步骤(按顺序执行)
    steps:

      # 拉取仓库代码
      - uses: actions/checkout@v3

      # 设置Java运行环境(temurin是开源jdk)，可以设置为: 1.8
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 设置gradle环境(比如: 6.5)、打包命令
      - uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: assembleRelease

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        # ID used to access action output
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
        env:
          # override default build-tools version (33.0.0) -- optional
          BUILD_TOOLS_VERSION: "34.0.0"

      # Example use of `signedReleaseFile` output -- not needed
      - uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
          # build-tools可能不存在，用step查看下支持哪些
      - run: ls /usr/local/lib/android/sdk/build-tools/

      # 重命名apk
      # GITHUB_REF_NAME是“触发workflow的分支或tag名称”
      - run: mv ${{steps.sign_app.outputs.signedReleaseFile}} fundark_$GITHUB_REF_NAME.apk
        # 可以指定shell命令的执行目录
        # working-directory: ./temp
        # 只当shell的类型
        # shell: bash

      # 发布
      - uses: ncipollo/release-action@v1
        with:
          artifacts: "fundark_$GITHUB_REF_NAME.apk"  # 要包含到 Release Assets 中的文件，这里指定了你重命名后的 APK 文件
          token: ${{ secrets.GITHUB_TOKEN }}  # 使用 GitHub 提供的 token
          generateReleaseNotes: true  # 自动生成一些变化列表之类的内容
